% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinyParse_findIT_regionRP.R
\name{shinyParse_findIT_regionRP}
\alias{shinyParse_findIT_regionRP}
\title{shinyParse_findIT_regionRP}
\usage{
shinyParse_findIT_regionRP(merge_result, mode = c("gene", "TF"))
}
\arguments{
\item{merge_result}{the merge result from c(regionRP, TF_result)}

\item{mode}{one of 'gene' or 'TF'}
}
\value{
shiny website
}
\description{
if you have regionRP result from calcRP_region, and TF_result from
findIT_regionRP. you can just c(regionRP, TF_result) to merge two result. Then
use shinyParse_findIT_regionRP to parse the result
}
\examples{
if (require(TxDb.Athaliana.BioMart.plantsmart28)) {
    library(FindIT2)
    data("ATAC_normCount")
    data("test_geneSet")
    Txdb <- TxDb.Athaliana.BioMart.plantsmart28
    seqlevels(Txdb) <- paste0("Chr", c(1:5, "M", "C"))

    peak_path <- system.file("extdata", "ATAC.bed.gz", package = "FindIT2")
    peak_GR <- loadPeakFile(peak_path)

    ChIP_peak_path <- system.file("extdata", "ChIP.bed.gz", package = "FindIT2")
    ChIP_peak_GR <- loadPeakFile(ChIP_peak_path)
    ChIP_peak_GR$TF_id <- "AT1G28300"

    mmAnno <- mm_geneScan(peak_GR, Txdb)

    regionRP <- calcRP_region(
        mmAnno = mmAnno,
        peakScoreMt = ATAC_normCount,
        Txdb = Txdb,
        Chrs_included = "Chr5"
    )

    set.seed(20160806)
    result_findIT_regionRP <- findIT_regionRP(
        regionRP = regionRP,
        Txdb = Txdb,
        TF_GR_database = ChIP_peak_GR,
        input_genes = test_geneSet,
        background_number = 3000
    )

    merge_result <- c(regionRP, result_findIT_regionRP)
    #shinyParse_findIT_regionRP(merge_result)

}
}
